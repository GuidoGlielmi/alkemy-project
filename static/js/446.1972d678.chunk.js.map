{"version":3,"file":"static/js/446.1972d678.chunk.js","mappings":"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","sources":["webpack://skill-up-react-ii/./src/components/task-form/TaskForm.module.css?19e7","components/task-form/TaskForm.js","../node_modules/react-loading-skeleton/dist/index.mjs","webpack://skill-up-react-ii/./src/components/card/Card.module.css?3c08","components/card/Card.js","webpack://skill-up-react-ii/./src/components/task-group/TaskGroup.module.css?663a","components/task-group/TaskGroup.js","webpack://skill-up-react-ii/./src/components/tasks/Tasks.module.css?940c","components/tasks/Tasks.js","webpack://skill-up-react-ii/./src/views/tasks/Tasks.module.css?1ff1","views/tasks/Tasks.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formContainer\":\"TaskForm_formContainer__EXmy8\"};","import InputContainer from 'components/input-container/InputContainer';\r\nimport Select from 'components/input-container/Select';\r\nimport {Formik, Field, Form} from 'formik';\r\nimport * as yup from 'yup';\r\nimport Button from 'components/button/Button';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {addTask} from 'redux/actions/tasksActions';\r\nimport styles from './TaskForm.module.css';\r\n\r\nconst REQUIRED_MSG = '* Campo obligatorio';\r\nconst getMinLengthMsg = (n) => `Ingrese mÃ¡s de ${n - 1} caracteres`;\r\nconst validationSchema = () =>\r\n  yup.object().shape({\r\n    title: yup.string().min(6, getMinLengthMsg(6)).required(REQUIRED_MSG),\r\n    status: yup.string().required(REQUIRED_MSG),\r\n    importance: yup.string().required(REQUIRED_MSG),\r\n    description: yup.string().required(REQUIRED_MSG),\r\n  });\r\n\r\nconst initialValues = {\r\n  title: '',\r\n  status: '',\r\n  importance: '',\r\n  description: '',\r\n};\r\n\r\nexport default function TaskForm() {\r\n  const dispatch = useDispatch();\r\n  const {statuses, priorities} = useSelector((state) => state);\r\n\r\n  const onSubmit = (values, {resetForm}) => dispatch(addTask(values, resetForm));\r\n\r\n  return (\r\n    <section className={styles.formContainer}>\r\n      <h2>Crear tarea</h2>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        validateOnChange={false}\r\n        onSubmit={onSubmit}\r\n      >\r\n        <Form>\r\n          <div>\r\n            <Field name='title' component={InputContainer} placeholder='Ingrese el tÃ­tulo'>\r\n              TÃ­tulo\r\n            </Field>\r\n            <Field\r\n              name='status'\r\n              placeholder='Seleccione un estado'\r\n              component={Select}\r\n              options={statuses}\r\n            >\r\n              Estado\r\n            </Field>\r\n            <Field\r\n              name='importance'\r\n              component={Select}\r\n              placeholder='Seleccione una prioridad'\r\n              options={priorities}\r\n            >\r\n              Prioridad\r\n            </Field>\r\n            <div style={{display: 'flex', flexDirection: 'column'}}>\r\n              {/* eslint-disable-next-line jsx-a11y/label-has-associated-control */}\r\n              <label htmlFor='description'>DescripciÃ³n</label>\r\n              <Field\r\n                name='description'\r\n                as='textarea'\r\n                placeholder='Ingrese una descripciÃ³n'\r\n                cols='30'\r\n                rows='10'\r\n                id='description'\r\n              >\r\n                Prioridad\r\n              </Field>\r\n            </div>\r\n          </div>\r\n          <Button type='submit'>Enviar</Button>\r\n        </Form>\r\n      </Formik>\r\n    </section>\r\n  );\r\n}\r\n","import React from 'react';\n\n/**\n * @internal\n */\nconst SkeletonThemeContext = React.createContext({});\n\n/* eslint-disable react/no-array-index-key */\nconst defaultEnableAnimation = true;\n// For performance & cleanliness, don't add any inline styles unless we have to\nfunction styleOptionsToCssProperties({ baseColor, highlightColor, width, height, borderRadius, circle, direction, duration, enableAnimation = defaultEnableAnimation, }) {\n    const style = {};\n    if (direction === 'rtl')\n        style['--animation-direction'] = 'reverse';\n    if (typeof duration === 'number')\n        style['--animation-duration'] = `${duration}s`;\n    if (!enableAnimation)\n        style['--pseudo-element-display'] = 'none';\n    if (typeof width === 'string' || typeof width === 'number')\n        style.width = width;\n    if (typeof height === 'string' || typeof height === 'number')\n        style.height = height;\n    if (typeof borderRadius === 'string' || typeof borderRadius === 'number')\n        style.borderRadius = borderRadius;\n    if (circle)\n        style.borderRadius = '50%';\n    if (typeof baseColor !== 'undefined')\n        style['--base-color'] = baseColor;\n    if (typeof highlightColor !== 'undefined')\n        style['--highlight-color'] = highlightColor;\n    return style;\n}\nfunction Skeleton({ count = 1, wrapper: Wrapper, className: customClassName, containerClassName, containerTestId, circle = false, style: styleProp, ...originalPropsStyleOptions }) {\n    var _a, _b, _c;\n    const contextStyleOptions = React.useContext(SkeletonThemeContext);\n    const propsStyleOptions = { ...originalPropsStyleOptions };\n    // DO NOT overwrite style options from the context if `propsStyleOptions`\n    // has properties explicity set to undefined\n    for (const [key, value] of Object.entries(originalPropsStyleOptions)) {\n        if (typeof value === 'undefined') {\n            delete propsStyleOptions[key];\n        }\n    }\n    // Props take priority over context\n    const styleOptions = {\n        ...contextStyleOptions,\n        ...propsStyleOptions,\n        circle,\n    };\n    // `styleProp` has the least priority out of everything\n    const style = {\n        ...styleProp,\n        ...styleOptionsToCssProperties(styleOptions),\n    };\n    let className = 'react-loading-skeleton';\n    if (customClassName)\n        className += ` ${customClassName}`;\n    const inline = (_a = styleOptions.inline) !== null && _a !== void 0 ? _a : false;\n    const elements = [];\n    const countCeil = Math.ceil(count);\n    for (let i = 0; i < countCeil; i++) {\n        let thisStyle = style;\n        if (countCeil > count && i === countCeil - 1) {\n            // count is not an integer and we've reached the last iteration of\n            // the loop, so add a \"fractional\" skeleton.\n            //\n            // For example, if count is 3.5, we've already added 3 full\n            // skeletons, so now we add one more skeleton that is 0.5 times the\n            // original width.\n            const width = (_b = thisStyle.width) !== null && _b !== void 0 ? _b : '100%'; // 100% is the default since that's what's in the CSS\n            const fractionalPart = count % 1;\n            const fractionalWidth = typeof width === 'number'\n                ? width * fractionalPart\n                : `calc(${width} * ${fractionalPart})`;\n            thisStyle = { ...thisStyle, width: fractionalWidth };\n        }\n        const skeletonSpan = (React.createElement(\"span\", { className: className, style: thisStyle, key: i }, \"\\u200C\"));\n        if (inline) {\n            elements.push(skeletonSpan);\n        }\n        else {\n            // Without the <br />, the skeleton lines will all run together if\n            // `width` is specified\n            elements.push(React.createElement(React.Fragment, { key: i },\n                skeletonSpan,\n                React.createElement(\"br\", null)));\n        }\n    }\n    return (React.createElement(\"span\", { className: containerClassName, \"data-testid\": containerTestId, \"aria-live\": \"polite\", \"aria-busy\": (_c = styleOptions.enableAnimation) !== null && _c !== void 0 ? _c : defaultEnableAnimation }, Wrapper\n        ? elements.map((el, i) => React.createElement(Wrapper, { key: i }, el))\n        : elements));\n}\n\nfunction SkeletonTheme({ children, ...styleOptions }) {\n    return (React.createElement(SkeletonThemeContext.Provider, { value: styleOptions }, children));\n}\n\nexport { SkeletonTheme, Skeleton as default };\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__MShTi\",\"description\":\"Card_description__BPnFi\"};","import Button from 'components/button/Button';\r\nimport {useState, useMemo} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {deleteTask, updateTask} from 'redux/actions/tasksActions';\r\nimport {when} from 'components/tasks/Tasks';\r\nimport styles from './Card.module.css';\r\n\r\nconst colors = ['rgb(219, 0, 0)', 'rgb(200, 200, 0)', 'rgb(38, 0, 219)'];\r\n\r\nconst formatDate = (date) => new Date().toString(date).split('(')[0];\r\nexport default function Card({\r\n  task: {\r\n    _id,\r\n    title,\r\n    status,\r\n    importance,\r\n    createdAt,\r\n    modifiedAt,\r\n    // deletedAt,\r\n    // deleted,\r\n    description,\r\n    user,\r\n  },\r\n}) {\r\n  const dispatch = useDispatch();\r\n  const {statuses, priorities} = useSelector((state) => state);\r\n\r\n  const [isLongDescriptionShown, setIsLongDescriptionShown] = useState(false);\r\n  const formattedCreationTime = useMemo(() => formatDate(createdAt), [createdAt]);\r\n  const formattedModificationTime = useMemo(() => formatDate(modifiedAt), [modifiedAt]);\r\n\r\n  function updatePriority() {\r\n    const currentIndex = priorities.indexOf(importance);\r\n    const newPriority =\r\n      currentIndex + 1 === priorities.length ? priorities[0] : priorities[currentIndex + 1];\r\n    dispatch(updateTask(_id, {importance: newPriority}));\r\n  }\r\n\r\n  function updateStatus() {\r\n    const currentIndex = statuses.indexOf(status);\r\n    const newStatus =\r\n      currentIndex + 1 === statuses.length ? statuses[0] : statuses[currentIndex + 1];\r\n    dispatch(updateTask(_id, {status: newStatus}));\r\n    /*\r\n    seems like strictMode doesn't like impure functions directly modifying state, so methods like splice or push are discouraged. This is checked by running the setState's callback argument twice. \r\n    */\r\n  }\r\n\r\n  return (\r\n    <div className={styles.card}>\r\n      <h3>{title}</h3>\r\n      <time dateTime={formattedCreationTime}>\r\n        <u>Creado</u>: {formattedCreationTime}\r\n      </time>\r\n      <time dateTime={formattedModificationTime}>\r\n        <u>Ãltima modificaciÃ³n</u>: {formattedModificationTime}\r\n      </time>\r\n      <h5>Creado por: {user.userName}</h5>\r\n      <div>\r\n        <Button size='small' color={colors[statuses.indexOf(status)]} action={updateStatus}>\r\n          {status}\r\n        </Button>\r\n        <Button size='small' color={colors[priorities.indexOf(importance)]} action={updatePriority}>\r\n          {importance}\r\n        </Button>\r\n      </div>\r\n      <button\r\n        title={when(description.length < 100)\r\n          .return('')\r\n          .elseWhen(isLongDescriptionShown)\r\n          .return('Ver menos')\r\n          .else('Ver mÃ¡s')}\r\n        className={styles.description}\r\n        type='button'\r\n        onClick={() => description.length > 100 && setIsLongDescriptionShown((ps) => !ps)}\r\n        style={{cursor: description.length > 100 ? 'pointer' : 'default'}}\r\n      >\r\n        {description.length < 100 || isLongDescriptionShown\r\n          ? description\r\n          : `${description.slice(0, 99)}...`}\r\n      </button>\r\n      <button id='delete' type='button' onClick={() => dispatch(deleteTask(_id))}>\r\n        X\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\n// /task -> everyone's tasks (team leader)\r\n// /task/me -> my tasks (team member)\r\n","// extracted by mini-css-extract-plugin\nexport default {\"group\":\"TaskGroup_group__l4ExK\"};","import Card from 'components/card/Card';\r\nimport React from 'react';\r\nimport styles from './TaskGroup.module.css';\r\n\r\nexport default function TaskGroup({status, tasks}) {\r\n  return (\r\n    <div className={styles.group}>\r\n      <h3>{status}</h3>\r\n      <div>\r\n        {tasks.map((t) => (\r\n          <Card key={t._id} task={t} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"tasks\":\"Tasks_tasks__dodve\",\"skeleton\":\"Tasks_skeleton__VPWhW\",\"skeletonDevice\":\"Tasks_skeletonDevice__reCtC\"};","import {useState, useEffect, Fragment} from 'react';\r\nimport Skeleton from 'react-loading-skeleton';\r\nimport TaskGroup from 'components/task-group/TaskGroup';\r\nimport {useSelector} from 'react-redux';\r\nimport styles from './Tasks.module.css';\r\n\r\nconst device = window.innerWidth < 768;\r\n\r\nexport default function Tasks({selectedPriority, searchKey}) {\r\n  const {tasks} = useSelector((state) => state);\r\n  const isFirstload = useIsFirstLoad(tasks.length);\r\n\r\n  function filterTasks() {\r\n    let filteredTasks = [...tasks];\r\n    if (selectedPriority !== 'ALL') {\r\n      filteredTasks = filteredTasks.filter((t) => t.importance === selectedPriority);\r\n    }\r\n    if (searchKey) filteredTasks = filteredTasks.filter((t) => t.title.includes(searchKey));\r\n    return filteredTasks;\r\n  }\r\n\r\n  return (\r\n    <div className={styles.tasks}>\r\n      {when(isFirstload)\r\n        .return(<Skeletons amount={3} />)\r\n        .elseWhen(!tasks.length)\r\n        .return(<span>No se han creado tareas</span>)\r\n        .else(\r\n          groupByStatus(filterTasks()).map(([status, tasks]) =>\r\n            tasks ? <TaskGroup key={status} status={status} tasks={tasks} /> : status,\r\n          ),\r\n        )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Skeletons = ({amount}) => (\r\n  <div className={styles[device ? 'skeletonDevice' : 'skeleton']}>\r\n    {Array(amount)\r\n      .fill(<Skeleton height='50vh' width={device ? '90vw' : '30vw'} />)\r\n      .map((s, i) => (\r\n        // eslint-disable-next-line react/no-array-index-key\r\n        <Fragment key={i}>{s}</Fragment>\r\n      ))}\r\n  </div>\r\n);\r\n\r\nfunction useIsFirstLoad(condition = true) {\r\n  const [isFirstLoad, setIsFirstLoad] = useState(true);\r\n\r\n  useEffect(() => {\r\n    condition && isFirstLoad && setIsFirstLoad(false);\r\n  }, [condition, isFirstLoad]);\r\n\r\n  return isFirstLoad;\r\n}\r\n\r\nfunction groupByStatus(arr) {\r\n  if (!arr.length) return [[<p style={{margin: '5vh auto 15vh'}}>No se han encontrado tareas</p>]];\r\n  const groupedTasks = arr.reduce((p, c) => ({...p, [c.status]: [...(p[c.status] || []), c]}), {});\r\n  return Object.entries(groupedTasks).sort(([[status1]], [[status2]]) => status1 < status2);\r\n}\r\n\r\nexport const when = (condition, value) => ({\r\n  elseWhen: (newCondition) => when(condition || newCondition, value),\r\n  return: (v) => when(condition, condition === true ? value ?? v : null),\r\n  else: (v) => value ?? v,\r\n  get: value,\r\n});\r\n","// extracted by mini-css-extract-plugin\nexport default {\"tasksPage\":\"Tasks_tasksPage__Vl8OS\",\"tasksContainer\":\"Tasks_tasksContainer__3v5Dr\",\"filterContainer\":\"Tasks_filterContainer__hriMA\",\"selectPriority\":\"Tasks_selectPriority__OpE+-\"};","import {useState, useEffect} from 'react';\r\nimport 'react-loading-skeleton/dist/skeleton.css';\r\nimport TaskForm from 'components/task-form/TaskForm';\r\nimport {useSelector, useDispatch} from 'react-redux/es/exports';\r\nimport {getAllTasks, setTaskCreator} from 'redux/actions/tasksActions';\r\nimport TasksComponent from 'components/tasks/Tasks';\r\nimport styles from './Tasks.module.css';\r\n\r\nconst taskByCreatorArray = ['ALL', 'MINE'];\r\n\r\nexport default function Tasks() {\r\n  const dispatch = useDispatch();\r\n  const {isLoggedIn, teamID} = useSelector((state) => state);\r\n\r\n  const [selectedPriority, setSelectedPriority] = useState('ALL');\r\n  const [searchKey, setSearchKey] = useState('');\r\n\r\n  useEffect(() => {\r\n    // using void appears to make it not work\r\n    isLoggedIn && dispatch(getAllTasks());\r\n  }, [dispatch, isLoggedIn]);\r\n\r\n  return (\r\n    <main className={styles.tasksPage}>\r\n      <h3>Team id: {teamID}</h3>\r\n      <TaskForm />\r\n      <section className={styles.tasksContainer}>\r\n        <h2>Mis Tareas</h2>\r\n        <FilterBox\r\n          selectedPriority={selectedPriority}\r\n          setSelectedPriority={setSelectedPriority}\r\n          setSearchKey={setSearchKey}\r\n        />\r\n        <TasksComponent searchKey={searchKey} selectedPriority={selectedPriority} />\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n\r\nfunction FilterBox({selectedPriority, setSelectedPriority, setSearchKey}) {\r\n  const dispatch = useDispatch();\r\n  const {taskByCreator, priorities} = useSelector((state) => state);\r\n  return (\r\n    <div className={styles.filterContainer}>\r\n      <RadioSet\r\n        title='Seleccionar por creador:'\r\n        elements={taskByCreatorArray}\r\n        action={(taskCreator) => dispatch(setTaskCreator(taskCreator))}\r\n        comparator={taskByCreator}\r\n        name='creator'\r\n      />\r\n      <RadioSet\r\n        title='Seleccionar por prioridad:'\r\n        elements={['ALL', ...priorities]}\r\n        action={(priority) => setSelectedPriority(priority)}\r\n        comparator={selectedPriority}\r\n        name='priorities'\r\n      />\r\n      <div>\r\n        <span>Buscar por tÃ­tulo</span>\r\n        <input onChange={(e) => debounce(() => setSearchKey(e.target.value), 100)()} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst RadioSet = ({title, elements, action, comparator, name}) => (\r\n  <fieldset className={styles.selectPriority}>\r\n    <legend>{title}</legend>\r\n    <div>\r\n      {elements.map((e) => (\r\n        <RadioContainer\r\n          key={e}\r\n          tag={e}\r\n          name={name}\r\n          action={() => action(e)}\r\n          checked={comparator === e}\r\n        />\r\n      ))}\r\n    </div>\r\n  </fieldset>\r\n);\r\n\r\nconst RadioContainer = ({tag, action, name, checked}) => (\r\n  <div>\r\n    <input onChange={action} checked={checked} name={name} type='radio' />\r\n    <span>{tag}</span>\r\n  </div>\r\n);\r\n\r\nfunction debounce(fn, delay) {\r\n  let timer;\r\n  let active = false;\r\n  return () => {\r\n    if (active) clearTimeout(timer);\r\n    timer = setTimeout(() => {\r\n      active = false;\r\n      fn();\r\n    }, delay);\r\n    active = true;\r\n  };\r\n}\r\n"],"names":["REQUIRED_MSG","validationSchema","yup","shape","title","min","n","required","status","importance","description","initialValues","TaskForm","dispatch","useDispatch","useSelector","state","statuses","priorities","className","styles","validateOnChange","onSubmit","values","resetForm","addTask","name","component","InputContainer","placeholder","Select","options","style","display","flexDirection","htmlFor","as","cols","rows","id","Button","type","SkeletonThemeContext","React","Skeleton","_a","_b","_c","count","Wrapper","wrapper","customClassName","containerClassName","containerTestId","circle","styleProp","originalPropsStyleOptions","contextStyleOptions","propsStyleOptions","Object","entries","key","styleOptions","baseColor","highlightColor","width","height","borderRadius","direction","duration","enableAnimation","styleOptionsToCssProperties","inline","elements","countCeil","Math","ceil","i","thisStyle","fractionalPart","fractionalWidth","skeletonSpan","push","map","el","colors","formatDate","date","Date","toString","split","Card","task","_id","createdAt","modifiedAt","user","useState","isLongDescriptionShown","setIsLongDescriptionShown","formattedCreationTime","useMemo","formattedModificationTime","dateTime","userName","size","color","indexOf","action","currentIndex","newStatus","length","updateTask","newPriority","when","return","elseWhen","else","onClick","ps","cursor","slice","deleteTask","TaskGroup","tasks","t","device","window","innerWidth","Tasks","selectedPriority","searchKey","isFirstload","condition","isFirstLoad","setIsFirstLoad","useEffect","useIsFirstLoad","Skeletons","amount","groupByStatus","filteredTasks","filter","includes","filterTasks","Array","fill","s","Fragment","arr","margin","groupedTasks","reduce","p","c","sort","status1","value","newCondition","v","get","taskByCreatorArray","isLoggedIn","teamID","setSelectedPriority","setSearchKey","getAllTasks","FilterBox","taskByCreator","RadioSet","taskCreator","setTaskCreator","comparator","priority","onChange","e","fn","delay","timer","active","clearTimeout","setTimeout","debounce","target","RadioContainer","tag","checked"],"sourceRoot":""}